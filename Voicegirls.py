#meta developer: @Vert5x

import pyttsx3
import io
import os
import subprocess
from telethon.tl.types import Message
from .. import loader, utils

@loader.tds
class AutoVoiceTTSMod(loader.Module):
    """–ú–æ–¥—É–ª—å –¥–ª—è –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ —Å –≤—ã–±–æ—Ä–æ–º –≥–æ–ª–æ—Å–∞ (—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π)"""

    strings = {"name": "AutoVoiceTTS"}

    def install_dependencies(self):
        """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π (eSpeak –∏ pyttsx3)"""
        try:
            subprocess.check_call(["which", "espeak"])
        except subprocess.CalledProcessError:
            try:
                subprocess.check_call(["pkg", "install", "espeak", "-y"])
            except Exception as e:
                raise RuntimeError(f"–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ eSpeak: {e}")

        try:
            subprocess.check_call(["pip", "show", "pyttsx3"])
        except subprocess.CalledProcessError:
            try:
                subprocess.check_call(["pip", "install", "pyttsx3"])
            except Exception as e:
                raise RuntimeError(f"–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ pyttsx3: {e}")

    async def ocmd(self, message: Message):
        args = utils.get_args_raw(message)
        if not args:
            await message.edit("‚ùå –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –æ–∑–≤—É—á–∫–∏!")
            return

        try:
            self.install_dependencies()
        except Exception as e:
            await message.edit(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π: {str(e)}")
            return

        words = args.split(" ", 1)

        if words[0].lower() == "–º":
            voice = "male"
            text = words[1] if len(words) > 1 else "–û—à–∏–±–∫–∞: –Ω–µ—Ç —Ç–µ–∫—Å—Ç–∞"
        elif words[0].lower() == "–∂":
            voice = "female"
            text = words[1] if len(words) > 1 else "–û—à–∏–±–∫–∞: –Ω–µ—Ç —Ç–µ–∫—Å—Ç–∞"
        else:
            voice = "female"
            text = args

        await message.edit(f"üéô –û–∑–≤—É—á–∏–≤–∞—é —Ç–µ–∫—Å—Ç ({'–ú—É–∂—Å–∫–æ–π' if voice == 'male' else '–ñ–µ–Ω—Å–∫–∏–π'} –≥–æ–ª–æ—Å)...")

        try:
            audio_fp = io.BytesIO()

            engine = pyttsx3.init()
            voices = engine.getProperty("voices")

            if voice == "male":
                engine.setProperty("voice", voices[0].id)
            else:
                engine.setProperty("voice", voices[1].id)

            engine.save_to_file(text, "output.mp3")
            engine.runAndWait()

            with open("output.mp3", "rb") as f:
                audio_fp.write(f.read())

            audio_fp.seek(0)

            await message.client.send_file(
                message.chat_id, 
                audio_fp, 
                voice_note=True
            )
            await message.delete()

        except Exception as e:
            await message.edit(f"‚ùå –û—à–∏–±–∫–∞ –æ–∑–≤—É—á–∫–∏: {str(e)}")