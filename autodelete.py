from .. import loader
import asyncio

#meta developer: @Vert5x

class SelfDestruct(loader.Module):
    """üí£ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π —á–µ—Ä–µ–∑ –∑–∞–¥–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è"""

    strings = {"name": "SelfDestruct"}

    def __init__(self):
        self.chats = {}  # –°–ª–æ–≤–∞—Ä—å {chat_id: –≤—Ä–µ–º—è —É–¥–∞–ª–µ–Ω–∏—è}
        self.default_time = 10  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 10 —Å–µ–∫—É–Ω–¥

    async def client_ready(self, client, db):
        self.client = client
        self.db = db
        self.chats = db.get(self.strings["name"], "chats", {})

    async def sdoncmd(self, message):
        """üí£ –í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏–µ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 10 —Å–µ–∫—É–Ω–¥)"""
        chat_id = message.chat_id
        args = message.raw_text.split()
        time = int(args[1][:-1]) if len(args) > 1 and args[1][:-1].isdigit() else self.default_time

        self.chats[chat_id] = time
        self.db.set(self.strings["name"], "chats", self.chats)
        await message.edit(f"‚úÖ –ê–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ ({time} —Å–µ–∫).")

    async def sdoffcmd(self, message):
        """üö´ –û—Ç–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏–µ –≤ —á–∞—Ç–µ"""
        chat_id = message.chat_id
        if chat_id in self.chats:
            del self.chats[chat_id]
            self.db.set(self.strings["name"], "chats", self.chats)
            await message.edit("üö´ –ê–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ.")
        else:
            await message.edit("‚ö†Ô∏è –ê–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏–µ —É–∂–µ –≤—ã–∫–ª—é—á–µ–Ω–æ.")

    async def sdsetcmd(self, message):
        """‚è≥ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Ä–µ–º—è –∞–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏—è (–ø—Ä–∏–º–µ—Ä: .sdset 30s)"""
        args = message.raw_text.split()
        if len(args) < 2 or not args[1][:-1].isdigit():
            return await message.edit("‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è (–ø—Ä–∏–º–µ—Ä: `.sdset 30s`).")

        self.default_time = int(args[1][:-1])
        await message.edit(f"‚úÖ –í—Ä–µ–º—è –∞–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {self.default_time} —Å–µ–∫.")

    async def sdchatscmd(self, message):
        """üìã –ü–æ–∫–∞–∑–∞—Ç—å —á–∞—Ç—ã —Å –≤–∫–ª—é—á–µ–Ω–Ω—ã–º –∞–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏–µ–º"""
        if not self.chats:
            return await message.edit("‚ö†Ô∏è –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∞–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏–π.")

        text = "üìã **–ê–∫—Ç–∏–≤–Ω—ã–µ –∞–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏—è:**\n"
        for chat, time in self.chats.items():
            text += f"- `{chat}` ‚è≥ {time} —Å–µ–∫.\n"

        await message.edit(text)

    async def sdclearcmd(self, message):
        """üóë –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –∞–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏—è"""
        self.chats.clear()
        self.db.set(self.strings["name"], "chats", self.chats)
        await message.edit("üóë –í—Å–µ –∞–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã.")

    async def watcher(self, message):
        """–ê–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π"""
        if message.chat_id in self.chats:
            await asyncio.sleep(self.chats[message.chat_id])
            await message.delete()