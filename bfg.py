from .. import loader, utils
import asyncio
import random
from telethon.tl.functions.account import UpdateProfileRequest
from telethon.tl.functions.messages import CreateChatRequest
from telethon.tl.functions.channels import EditAdminRequest
from telethon.tl.types import ChatAdminRights

#meta developer: @Vert5x

class AutoNickChatManager(loader.Module):
    """üîÑ –ê–≤—Ç–æ—Å–º–µ–Ω–∞ –Ω–∏–∫–∞ + –ê–≤—Ç–æ—Å–æ–∑–¥–∞–Ω–∏–µ —á–∞—Ç–æ–≤ —Å @bforgame_bot"""

    strings = {"name": "AutoNickChatManager"}

    def __init__(self):
        self.auto_mode = False
        self.delay = 600  # 10 –º–∏–Ω—É—Ç
        self.nick_list = ["Player123", "CryptoKing", "GramHunter", "GamerX", "AnonUser"]
        self.chat_id = None  # ID —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ —á–∞—Ç–∞

    async def client_ready(self, client, db):
        """üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ —á–∞—Ç–∞ –∏ –∞–≤—Ç–æ—Å–º–µ–Ω–∞ –Ω–∏–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ"""
        await self.auto_create_chat(client)
        await self.auto_change_nick(client, mode="all")

    async def auto_create_chat(self, client):
        """ü§ñ –ê–≤—Ç–æ-—Å–æ–∑–¥–∞–Ω–∏–µ —á–∞—Ç–∞ —Å @bforgame_bot"""
        chat_name = "BFG"  # –¢–µ–ø–µ—Ä—å —á–∞—Ç –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–æ—Å—Ç–æ "BFG"

        new_chat = await client(CreateChatRequest(users=["@bforgame_bot"], title=chat_name))
        self.chat_id = new_chat.chats[0].id

        await asyncio.sleep(5)  # –ñ–¥—ë–º, –ø–æ–∫–∞ –±–æ—Ç –∑–∞–π–¥—ë—Ç

        try:
            await client(EditAdminRequest(
                channel=self.chat_id,
                user_id="@bforgame_bot",
                admin_rights=ChatAdminRights(
                    post_messages=True,
                    delete_messages=True,
                    ban_users=True,
                    invite_users=True,
                    pin_messages=True
                ),
                rank="Bot"
            ))
        except:
            pass  # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º

        await asyncio.sleep(2)
        try:
            await client.archive_chats([self.chat_id])  # –ê—Ä—Ö–∏–≤–∏—Ä—É–µ–º
        except:
            pass  # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º

    async def auto_change_nick(self, client, mode="all"):
        """üîÑ –ê–≤—Ç–æ—Å–º–µ–Ω–∞ –Ω–∏–∫–∞"""
        new_nick = random.choice(self.nick_list)

        if mode in ["tg", "all"]:
            try:
                await client(UpdateProfileRequest(first_name=new_nick))
            except:
                pass

        if mode in ["bfg", "all"] and self.chat_id:
            try:
                await client.send_message(self.chat_id, f"–°–º–µ–Ω–∏—Ç—å –Ω–∏–∫ {new_nick}")
            except:
                pass

    async def nickcmd(self, message):
        """üîÑ –°–º–µ–Ω–∏—Ç—å –Ω–∏–∫ (.nick <–Ω–∏–∫> [tg/bfg/all])"""
        args = utils.get_args_raw(message).split()
        new_nick = args[0] if args else random.choice(self.nick_list)
        mode = args[1] if len(args) > 1 else "all"

        if mode in ["tg", "all"]:
            try:
                await message.client(UpdateProfileRequest(first_name=new_nick))
                await message.edit(f"‚úÖ –ù–∏–∫ –≤ **Telegram** –∏–∑–º–µ–Ω—ë–Ω –Ω–∞: {new_nick}")
            except:
                await message.edit(f"‚ùå –û—à–∏–±–∫–∞ —Å–º–µ–Ω—ã –Ω–∏–∫–∞ –≤ Telegram")

        if mode in ["bfg", "all"] and self.chat_id:
            try:
                await message.client.send_message(self.chat_id, f"–°–º–µ–Ω–∏—Ç—å –Ω–∏–∫ {new_nick}")
                await message.edit(f"‚úÖ –ù–∏–∫ –≤ **BFG** –∏–∑–º–µ–Ω—ë–Ω –Ω–∞: {new_nick}")
            except:
                await message.edit(f"‚ùå –û—à–∏–±–∫–∞ —Å–º–µ–Ω—ã –Ω–∏–∫–∞ –≤ BFG")

    async def nicklistcmd(self, message):
        """üìú –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –Ω–∏–∫–æ–≤"""
        await message.edit("üìú **–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –Ω–∏–∫–æ–≤:**\n" + "\n".join(self.nick_list))

    async def nickaddcmd(self, message):
        """‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–∏–∫ –≤ —Å–ø–∏—Å–æ–∫ (.nickadd –ù–æ–≤—ã–π–ù–∏–∫)"""
        args = utils.get_args_raw(message)
        if not args:
            return await message.edit("‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ –Ω–∏–∫.")

        self.nick_list.append(args)
        await message.edit(f"‚úÖ –ù–∏–∫ `{args}` –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫.")

    async def nickautocmd(self, message):
        """üîÑ –ê–≤—Ç–æ—Å–º–µ–Ω–∞ –Ω–∏–∫–∞ (.nickauto 10m [tg/bfg/all])"""
        args = utils.get_args_raw(message).split()
        if args and args[0][:-1].isdigit():
            self.delay = int(args[0][:-1]) * 60

        mode = args[1] if len(args) > 1 else "all"

        self.auto_mode = True
        await message.edit(f"‚úÖ –ê–≤—Ç–æ—Å–º–µ–Ω–∞ –Ω–∏–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞ (–∫–∞–∂–¥—ã–µ {self.delay//60} –º–∏–Ω, —Ä–µ–∂–∏–º: {mode}).")

        while self.auto_mode:
            await self.auto_change_nick(message.client, mode)
            await asyncio.sleep(self.delay)

    async def nickstopcmd(self, message):
        """‚èπ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–≤—Ç–æ—Å–º–µ–Ω—É –Ω–∏–∫–∞"""
        self.auto_mode = False
        await message.edit("‚èπ –ê–≤—Ç–æ—Å–º–µ–Ω–∞ –Ω–∏–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞.")