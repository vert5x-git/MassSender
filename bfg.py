from .. import loader, utils
import asyncio
import random
from telethon.tl.functions.account import UpdateProfileRequest

#meta developer: @Vert5x

class NickChanger(loader.Module):
    """üîÑ –ê–≤—Ç–æ—Å–º–µ–Ω–∞ –Ω–∏–∫–∞ –≤ Telegram –∏ BFG"""

    strings = {"name": "NickChanger"}

    def __init__(self):
        self.auto_mode = False
        self.delay = 600
        self.nicks = ["Player123", "CryptoKing", "GramHunter", "GamerX", "AnonUser"]
        self.bfg_bot = "@bforgame_bot"

    async def change_nick(self, client, mode, new_nick=None):
        new_nick = new_nick or random.choice(self.nicks)

        if mode in ["tg", "all"]:
            await client(UpdateProfileRequest(first_name=new_nick))

        if mode in ["bfg", "all"]:
            await client.send_message(self.bfg_bot, f"–°–º–µ–Ω–∏—Ç—å –Ω–∏–∫ {new_nick}")

        return new_nick

    async def nickcmd(self, message):
        """üîÑ –°–º–µ–Ω–∏—Ç—å –Ω–∏–∫ (.n <–Ω–∏–∫> [tg/bfg/all])"""
        args = utils.get_args_raw(message).split()
        new_nick = args[0] if args else None
        mode = args[1] if len(args) > 1 and args[1] in ["tg", "bfg", "all"] else "all"

        new_nick = await self.change_nick(message.client, mode, new_nick)
        await message.edit(f"‚úÖ –ù–∏–∫ –∏–∑–º–µ–Ω—ë–Ω ({mode.upper()}): {new_nick}")

    async def nlistcmd(self, message):
        """üìú –°–ø–∏—Å–æ–∫ –Ω–∏–∫–æ–≤ (.nl)"""
        await message.edit("üìú **–î–æ—Å—Ç—É–ø–Ω—ã–µ –Ω–∏–∫–∏:**\n" + "\n".join(self.nicks))

    async def naddcmd(self, message):
        """‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–∏–∫ (.na <–Ω–∏–∫>)"""
        args = utils.get_args_raw(message)
        if not args:
            return await message.edit("‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ –Ω–∏–∫.")

        self.nicks.append(args)
        await message.edit(f"‚úÖ –ù–∏–∫ `{args}` –¥–æ–±–∞–≤–ª–µ–Ω.")

    async def nautc(self, message):
        """üîÑ –ê–≤—Ç–æ—Å–º–µ–Ω–∞ –Ω–∏–∫–∞ (.naut <–∏–Ω—Ç–µ—Ä–≤–∞–ª> [tg/bfg/all])"""
        args = utils.get_args_raw(message).split()
        if args and args[0][:-1].isdigit():
            self.delay = int(args[0][:-1]) * 60

        mode = args[1] if len(args) > 1 and args[1] in ["tg", "bfg", "all"] else "all"

        self.auto_mode = True
        await message.edit(f"‚úÖ –ê–≤—Ç–æ–Ω–∏–∫ –≤–∫–ª—é—á—ë–Ω ({self.delay//60} –º–∏–Ω, {mode.upper()})")

        while self.auto_mode:
            await self.change_nick(message.client, mode)
            await asyncio.sleep(self.delay)

    async def nstopcmd(self, message):
        """‚èπ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–≤—Ç–æ–Ω–∏–∫ (.nst)"""
        self.auto_mode = False
        await message.edit("‚èπ –ê–≤—Ç–æ–Ω–∏–∫ –æ—Ç–∫–ª—é—á—ë–Ω.")