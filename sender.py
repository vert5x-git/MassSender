from .. import loader, utils
import asyncio

#meta developer: @Vert5x

class MassX(loader.Module):
    """üì¢ –ú–æ–¥—É–ª—å –¥–ª—è –º–∞—Å—Å–æ–≤–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π"""

    strings = {"name": "MassX"}

    def __init__(self):
        self.chats = []
        self.auto_mode = False
        self.delay = 2  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∑–∞–¥–µ—Ä–∂–∫–∞ 2 —Å–µ–∫—É–Ω–¥—ã –º–µ–∂–¥—É –æ—Ç–ø—Ä–∞–≤–∫–∞–º–∏

    async def send_message_to_chats(self, client, message_text):
        for chat in self.chats:
            try:
                await client.send_message(chat, message_text)
                await asyncio.sleep(self.delay)
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ {chat}: {e}")

    async def ms(self, message):
        """üì¢ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç—ã (.ms <—Ç–µ–∫—Å—Ç>)"""
        args = utils.get_args_raw(message)
        if not args:
            return await message.edit("‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è.")

        await self.send_message_to_chats(message.client, args)
        await message.edit(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ {len(self.chats)} —á–∞—Ç–æ–≤.")

    async def add(self, message):
        """‚ûï –î–æ–±–∞–≤–∏—Ç—å —á–∞—Ç (.add <—á–∞—Ç>)"""
        args = utils.get_args_raw(message)
        if not args:
            return await message.edit("‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ ID —á–∞—Ç–∞ –∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —á–∞—Ç.")

        self.chats.append(args)
        await message.edit(f"‚úÖ –ß–∞—Ç {args} –¥–æ–±–∞–≤–ª–µ–Ω.")

    async def delete(self, message):
        """‚ùå –£–¥–∞–ª–∏—Ç—å —á–∞—Ç (.del <—á–∞—Ç>)"""
        args = utils.get_args_raw(message)
        if not args or args not in self.chats:
            return await message.edit("‚ö†Ô∏è –ß–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.")

        self.chats.remove(args)
        await message.edit(f"‚úÖ –ß–∞—Ç {args} —É–¥–∞–ª—ë–Ω.")

    async def list(self, message):
        """üìú –°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ (.list)"""
        if not self.chats:
            return await message.edit("‚ö†Ô∏è –ù–µ—Ç —á–∞—Ç–æ–≤ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏.")

        await message.edit(f"üìú **–ß–∞—Ç—ã:**\n" + "\n".join(self.chats))

    async def auto(self, message):
        """üîÑ –í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ—Ä–∞—Å—Å—ã–ª–∫—É (.auto)"""
        self.auto_mode = True
        await message.edit("‚úÖ –ê–≤—Ç–æ—Ä–∞—Å—Å—ã–ª–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞.")

        while self.auto_mode:
            await self.send_message_to_chats(message.client, "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
            await asyncio.sleep(self.delay)

    async def stop_auto(self, message):
        """‚èπ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–≤—Ç–æ—Ä–∞—Å—Å—ã–ª–∫—É (.stop)"""
        self.auto_mode = False
        await message.edit("‚èπ –ê–≤—Ç–æ—Ä–∞—Å—Å—ã–ª–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")

    async def set_speed(self, message):
        """‚ö° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–∫–æ—Ä–æ—Å—Ç—å —Ä–∞—Å—Å—ã–ª–∫–∏ (.speed <—Å–µ–∫—É–Ω–¥—ã>)"""
        args = utils.get_args_raw(message)
        if not args or not args.isdigit():
            return await message.edit("‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å–∫–æ—Ä–æ—Å—Ç—å (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö).")

        self.delay = int(args)
        await message.edit(f"‚úÖ –°–∫–æ—Ä–æ—Å—Ç—å —Ä–∞—Å—Å—ã–ª–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ {self.delay} —Å–µ–∫—É–Ω–¥.")