from .. import loader
from telethon.tl.types import InputMessagesFilterPhotos, InputMessagesFilterGif

#meta developer: @Novichok_v_Crypto

class MassSender(loader.Module):
    """üì¢ –ú–∞—Å—Å–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ –ø–æ —á–∞—Ç–∞–º —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Ñ–æ—Ç–æ, –≥–∏—Ñ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏."""

    strings = {"name": "MassSender"}

    async def client_ready(self, client, db):
        self.client = client
        self.db = db
        self.chats = db.get(self.strings["name"], "chats", [])
        self.allow_pms = db.get(self.strings["name"], "allow_pms", False)

    async def addchatcmd(self, message):
        """‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–µ–∫—É—â–∏–π —á–∞—Ç"""
        chat_id = message.chat_id
        if chat_id not in self.chats:
            self.chats.append(chat_id)
            self.db.set(self.strings["name"], "chats", self.chats)
            await message.edit("‚úÖ –ß–∞—Ç –¥–æ–±–∞–≤–ª–µ–Ω.")
        else:
            await message.edit("‚ö†Ô∏è –£–∂–µ –≤ —Å–ø–∏—Å–∫–µ.")

    async def delchatcmd(self, message):
        """‚ûñ –£–¥–∞–ª–∏—Ç—å —Ç–µ–∫—É—â–∏–π —á–∞—Ç"""
        chat_id = message.chat_id
        if chat_id in self.chats:
            self.chats.remove(chat_id)
            self.db.set(self.strings["name"], "chats", self.chats)
            await message.edit("‚úÖ –ß–∞—Ç —É–¥–∞–ª—ë–Ω.")
        else:
            await message.edit("‚ö†Ô∏è –ß–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.")

    async def chatscmd(self, message):
        """üìú –°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤"""
        if not self.chats:
            return await message.edit("üì≠ –°–ø–∏—Å–æ–∫ –ø—É—Å—Ç.")
        chat_list = "\n".join([f"`{chat}`" for chat in self.chats])
        await message.edit(f"üìú –ß–∞—Ç—ã:\n{chat_list}")

    async def sendcmd(self, message):
        """üì© –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ, —Ñ–æ—Ç–æ –∏–ª–∏ –≥–∏—Ñ (—Ä–µ–ø–ª–∞–π –∏–ª–∏ —Ç–µ–∫—Å—Ç)"""
        reply = await message.get_reply_message()
        text = message.raw_text.split(" ", 1)[1] if len(message.raw_text.split(" ", 1)) > 1 else None

        if not reply and not text:
            return await message.edit("‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç –∏–ª–∏ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ.")

        count = 0
        for chat in self.chats:
            if not self.allow_pms and chat > 0:
                continue  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è

            try:
                if reply and (reply.photo or reply.gif):
                    await self.client.send_file(chat, reply)
                else:
                    await self.client.send_message(chat, text if text else reply)
                count += 1
            except Exception:
                pass

        await message.edit(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ {count} —á–∞—Ç–æ–≤.")

    async def addallcmd(self, message):
        """üì• –î–æ–±–∞–≤–∏—Ç—å –≤—Å–µ —á–∞—Ç—ã (–±–µ–∑ –∫–∞–Ω–∞–ª–æ–≤)"""
        dialogs = await self.client.get_dialogs()
        self.chats = [
            dialog.id for dialog in dialogs
            if (dialog.is_group or dialog.is_user) and not dialog.is_channel
        ]
        self.db.set(self.strings["name"], "chats", self.chats)
        await message.edit(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {len(self.chats)} —á–∞—Ç–æ–≤.")

    async def clearcmd(self, message):
        """üóë –û—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤"""
        self.chats = []
        self.db.set(self.strings["name"], "chats", self.chats)
        await message.edit("üóë –ß–∞—Ç—ã –æ—á–∏—â–µ–Ω—ã.")

    async def togglepmscmd(self, message):
        """üîß –í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É –≤ –õ–°"""
        self.allow_pms = not self.allow_pms
        self.db.set(self.strings["name"], "allow_pms", self.allow_pms)
        await message.edit(f"üîß –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ –õ–° {'‚úÖ –≤–∫–ª—é—á–µ–Ω–∞' if self.allow_pms else '‚ùå –æ—Ç–∫–ª—é—á–µ–Ω–∞'}.")